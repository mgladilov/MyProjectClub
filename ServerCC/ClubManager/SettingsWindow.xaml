<controls:MetroWindow x:Class="ClubManager.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:settings="clr-namespace:ClubManager.ViewModel.Settings"
        xmlns:Converter="clr-namespace:ClubManager.Converters"
        mc:Ignorable="d"
        Title="{Binding Path=Title}" Height="550" Width="850" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <settings:SettingView/>
    </Window.DataContext>
    <Window.Resources>
        <Converter:EnumConverter x:Key="EnumConverter"/>
        <Converter:BoolToStringConverter x:Key="BoolToStringConverter"/>        
    </Window.Resources>
    <Grid>
        <TabControl TabStripPlacement="Left">
            <TabItem Header="Компьютеры" DataContext="{Binding Path=ComputerTabView}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid AutoGenerateColumns="False" Grid.Row="1" ItemsSource="{Binding Path=Computers}" SelectedItem="{Binding Path=SelectedComputer}" VerticalAlignment="Top">
                        <DataGrid.Resources>
                            <Style x:Key="ValueComboBoxStyle" TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ComputerTabView.ComputerGroups, RelativeSource={RelativeSource AncestorType=Window}}"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Path=Number}" Header="№" Width="80"/>
                            <DataGridTextColumn Binding="{Binding Path=IpAddress}" Header="IP" Width="180"/>
                            <DataGridComboBoxColumn Header="Group" DisplayMemberPath="Name" SelectedItemBinding="{Binding ComputerGroup}" 
                                                        ElementStyle="{StaticResource ValueComboBoxStyle}"
                                                        EditingElementStyle="{StaticResource ValueComboBoxStyle}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Grid.Row="0">
                        <Expander Header="Настройка групп">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Path=ComputerGroups}" SelectedItem="{Binding Path=SelectedGroup}" MinHeight="100" Width="150">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Path=Name}" Header="Группы" Width="*"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <Grid Grid.Row="0" Grid.Column="1">
                                        <TextBox Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="15 0 15 0" Text="{Binding Path=SelectedGroup.Name, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Grid>
                                    <StackPanel Grid.Column="2" VerticalAlignment="Center">
                                        <Button Margin="5" HorizontalAlignment="Center" Width="100" Content="Обновить" Command="{Binding Path=UpdateGroup}"/>
                                        <Button Margin="5" HorizontalAlignment="Center" Width="100" Content="Удалить" Command="{Binding Path=DeleteGroup}"/>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                    <StackPanel Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10"  Orientation="Horizontal">
                        <Button Width="100" Margin="5" Content="Обновить" Command="{Binding Path=Update}" />
                        <Button Width="100" Margin="5" Content="Удалить" Command="{Binding Path=Delete}"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Пользователи" DataContext="{Binding Path=UserTabView}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid AutoGenerateColumns="False" Grid.ColumnSpan="4" ItemsSource="{Binding Path=Users}" SelectedItem="{Binding Path=SelectedUser}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Path=Name}" Width="100" Header="Имя"/>
                            <DataGridTextColumn Binding="{Binding Path=UsersGroup.Name}" Width="100" Header="Группа"/>
                            <DataGridTextColumn Binding="{Binding Path=Phone}" Header="№ Телефона"/>
                            <DataGridTextColumn Binding="{Binding Path=Address}"  Width="100"  Header="Адрес"/>
                            <DataGridTextColumn Binding="{Binding Path=Email}" Width="100" Header="E-mail"/>
                            <DataGridTextColumn Binding="{Binding Path=Remark}" Header="Дополнительно"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Grid.Row="1" Grid.Column="0" Content="Имя:"/>
                    <Label Grid.Row="2" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Center" Content="Пароль:"/>
                    <Label Grid.Row="4" Grid.Column="0" Content="Группа:"/>

                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=SelectedUser.Name, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="180" HorizontalAlignment="Center"/>
                    <PasswordBox Grid.Row="2" Grid.Column="1" Margin="5" Width="180" />
                    <PasswordBox Grid.Row="3" Grid.Column="1" Margin="5" Width="180" />
                    <ComboBox Grid.Row="4" Grid.Column="1" ItemsSource="{Binding Path=UserGroups}" DisplayMemberPath="Name" SelectedItem="{Binding Path=SelectedUser.UsersGroup, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Margin="5" Width="180" HorizontalAlignment="Center"/>

                    <Label Grid.Row="1" Grid.Column="2" Content="№ Телефона:" />
                    <Label Grid.Row="2" Grid.Column="2" Content="Адрес:" />
                    <Label Grid.Row="3" Grid.Column="2" Content="E-mail:" />
                    <Label Grid.Row="4" Grid.Column="2" Content="Дополнительно:" />

                    <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Path=SelectedUser.Phone, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="180" HorizontalAlignment="Center" />
                    <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding Path=SelectedUser.Address, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="180" HorizontalAlignment="Center" />
                    <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding Path=SelectedUser.Email, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="180" HorizontalAlignment="Center" />
                    <TextBox Grid.Row="4" Grid.Column="3" Text="{Binding Path=SelectedUser.Remark, UpdateSourceTrigger=PropertyChanged}" Margin="5" Width="180" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" AcceptsReturn="True" Height="50"/>
                </Grid>
            </TabItem>
            <TabItem Header="Учетные записи" DataContext="{Binding Path=AccountTabView}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                   
                        <TextBox Grid.Row="0" Margin="5" Text="{Binding Path=FilterText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <DataGrid Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding Path=Accounts , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedItem="{Binding Path=SelectedAccount,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Path=Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Header="№" Width="50"/>
                                <DataGridTextColumn Binding="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Name" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    
                    <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Margin="5" Content="Name"/>
                        <Label Grid.Row="1" Margin="5" Content="Password"/>
                        <Label Grid.Row="2" Margin="5" Content="Email"/>
                        <Label Grid.Row="3" Margin="5" Content="Phone"/>
                        <Label Grid.Row="4" Margin="5" Content="Address"/>
                        <Label Grid.Row="5" Margin="5" Grid.ColumnSpan="2" Content="PrivilegedDiscount"/>
                        <Label Grid.Row="6" Margin="5" Content="Balance"/>
                        <Label Grid.Row="7" Margin="5" Content="Summary"/>
                        <Label Grid.Row="8" Margin="5" Content="Remark"/>

                        <TextBox Grid.Row="0" Grid.Column="1" Margin="5" Text="{Binding Path=SelectedAccount.Name, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="5" Text="{Binding Path=SelectedAccount.Password, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Margin="5" Text="{Binding Path=SelectedAccount.Email, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Margin="5" Text="{Binding Path=SelectedAccount.Phone, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Margin="5" Text="{Binding Path=SelectedAccount.Address, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="5" Grid.Column="1" Width="80" Margin="5 5 80 5" Text="{Binding Path=SelectedAccount.PrivilegedDiscount, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Grid.Row="5" Grid.Column="1" Margin="5" Content="Privileged" IsChecked="{Binding Path=SelectedAccount.IsPrivileged}" HorizontalAlignment="Right"/>
                        <TextBox Grid.Row="6" Grid.Column="1" Margin="5" Text="{Binding Path=SelectedAccount.Balance, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="7" Grid.Column="1" Margin="5" Text="{Binding Path=SelectedAccount.Summary, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="8" Grid.Column="1" Margin="5" Text="{Binding Path=SelectedAccount.Remark, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Grid.Column="1" Grid.Row="9" Margin="5" Content="Blocked" IsChecked="{Binding Path=SelectedAccount.IsBlocked}" HorizontalAlignment="Right"/>

                    </Grid>
                    <StackPanel Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="10"  Orientation="Horizontal">
                        <Button Width="100" Margin="5" Content="Обновить" Command="{Binding Path=Update}"/>
                        <Button Width="100"  Margin="5" Content="Удалить" Command="{Binding Path=Delete}"/>
                    </StackPanel>

                </Grid>

            </TabItem>
            <TabItem Header="Тарифы" DataContext="{Binding Path=TariffTabView}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Path=ComputerGroups, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=SelectedGroup, UpdateSourceTrigger=PropertyChanged}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Path=Name}" IsReadOnly="True" Header="Группы" MinWidth="130"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid Grid.Column="1" Margin="15 0 0 0" AutoGenerateColumns="False" ItemsSource="{Binding Path=TariffIntervals, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                              SelectedItem="{Binding Path= SelectedInterval, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Path=Name}" Header="Название"/>
                            <DataGridTextColumn Binding="{Binding Path=Start, StringFormat=\{0:h\\:mm\}}" IsReadOnly="True" MinWidth="70" Header="От"/>
                            <DataGridTextColumn Binding="{Binding Path=Stop, StringFormat=\{0:h\\:mm\}}" IsReadOnly="True" MinWidth="70" Header="До"/>
                            <DataGridTextColumn Binding="{Binding Path=Cost}" Header="Цена"/>
                            <DataGridTextColumn Binding="{Binding Path=IsPacket, Converter={StaticResource BoolToStringConverter}, ConverterParameter='Пакетный,По часовой'}" IsReadOnly="True" Header="Тип"/>
                            <DataGridTextColumn Binding="{Binding Path=DaysOfWeek, Converter={StaticResource EnumConverter}}" IsReadOnly="True" Header="Дни недели"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <GroupBox Grid.Row="1" Grid.ColumnSpan="2" Header="Тарифная сетка" Padding="5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" HorizontalAlignment="Center" Content="Название: "/>
                            <TextBox Grid.Row="1" Grid.Column="0" Margin="5 0 5 0" Text="{Binding Path=SelectedInterval.Name, UpdateSourceTrigger=PropertyChanged}"/>
                            <StackPanel Grid.Row="2" Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding Path=SelectedInterval.IsMonday, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Пн" Padding="0 0 5 0"></CheckBox>
                                <CheckBox IsChecked="{Binding Path=SelectedInterval.IsTuesday, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Вт" Padding="0 0 5 0"></CheckBox>
                                <CheckBox IsChecked="{Binding Path=SelectedInterval.IsWednesday, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Ср" Padding="0 0 5 0"></CheckBox>
                                <CheckBox IsChecked="{Binding Path=SelectedInterval.IsThursday, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Чт" Padding="0 0 5 0"></CheckBox>
                                <CheckBox IsChecked="{Binding Path=SelectedInterval.IsFriday, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Пт" Padding="0 0 5 0"></CheckBox>
                                <CheckBox IsChecked="{Binding Path=SelectedInterval.IsSaturday, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Сб" Padding="0 0 5 0"></CheckBox>
                                <CheckBox IsChecked="{Binding Path=SelectedInterval.IsSunday, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Вс" Padding="0 0 5 0"></CheckBox>
                            </StackPanel>

                            <Label Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center">
                                <Label.Resources>
                                    <Style TargetType="{x:Type Label}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=IsNonFixedCheck, Path=IsChecked}" Value="False">
                                                <Setter Property="Content" Value="От:" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=IsNonFixedCheck, Path=IsChecked}" Value="True">
                                                <Setter Property="Content" Value="Время:" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Resources>
                            </Label>
                            <controls:TimePicker Grid.Row="1" Grid.Column="1" Margin="5 0 5 0" SelectedTimeFormat="Short" Culture="ru-RU" SelectedDateTime="{Binding Path=SelectedInterval.StartTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center" Content="До: "/>
                            <controls:TimePicker Grid.Row="1" Grid.Column="2" Margin="5 0 5 0" SelectedTimeFormat="Short" Culture="ru-RU" SelectedDateTime="{Binding Path=SelectedInterval.StopTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <controls:TimePicker.Resources>
                                    <Style TargetType="controls:TimePicker">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=IsNonFixedCheck, Path=IsChecked}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:TimePicker.Resources>
                            </controls:TimePicker>
                                    <Label Grid.Row="0" Grid.Column="3" HorizontalAlignment="Center" Content="Цена: "/>
                            <TextBox Grid.Row="1" Grid.Column="3" Margin="5 0 5 0" Text="{Binding Path=SelectedInterval.Cost, UpdateSourceTrigger=PropertyChanged}"/>
                            
                            <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Center">
                                <CheckBox Name="IsPacketCheck" IsChecked="{Binding Path=SelectedInterval.IsPacket, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Content="Пакетный режим" Padding="5"/>
                                <CheckBox Name="IsNonFixedCheck">
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox}">
                                            <Setter Property="IsChecked" Value="{Binding Path=SelectedInterval.IsNonFixed, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Setter Property="Content" Value="Незакрепленный"/>
                                            <Setter Property="Padding" Value="5"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=IsPacketCheck, Path=IsChecked}" Value="False">
                                                    <Setter Property="IsEnabled" Value="False"/>                                                    
                                                    <Setter Property="IsChecked" Value="False"/>                                                    
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </StackPanel>
                            <StackPanel Grid.Row="3" Grid.ColumnSpan="4" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10"  Orientation="Horizontal">
                                <Button Width="100" Margin="5" Content="Обновить" Command="{Binding Path=Update}" />
                                <Button Width="100" Margin="5" Content="Удалить" Command="{Binding Path=Delete}"/>
                            </StackPanel>

                        </Grid>
                        
                    </GroupBox>
                    

                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</controls:MetroWindow>
